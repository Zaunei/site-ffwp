{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'wp-',

  -- Name of the community.
  site_name = 'Freifunk Westpfalz',

  -- Shorthand of the community.
  site_code = 'ffwp',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.198.0.0/16',
  prefix6 = 'fdc6:c4fe:1de4::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3', -- Europe/Berlin

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'fdc6:c4fe:1de4::c1','ntp.westpfalz.freifunk.net'},

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 6,

    -- ESSID used for client network.
    ssid = 'westpfalz.freifunk.net',

    -- Specifies the channel width in 802.11n and 802.11ac mode.
    -- Possible values are:
    -- HT20 (single 20MHz channel),
    -- HT40- (2x 20MHz channels, secondary below)
    -- HT40+ (2x 20MHz channels, secondary above)
    htmode = 'HT20',

    -- Adjust these values!
    mesh_ssid = 'c4:fe:1d:e4:02:03',  -- ESSID used for mesh
    mesh_bssid = 'c4:fe:1d:e4:02:03', -- BSSID used for mesh

    -- Bitrate used for multicast/broadcast packets.
    mesh_mcast_rate = 12000,

    -- (optional) mesh VLAN on 802.11 ad-hoc interface (1-4095)
    -- mesh_vlan = 14,
    -- client_disabled = true,
    -- mesh_disabled = false,
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel and htmode.
  wifi5 = {
    ssid = 'westpfalz.freifunk.net 5GHz',
    channel = 44,
    htmode = 'HT40+',
    mesh_ssid = 'c4:fe:1d:e4:02:03',
    mesh_bssid = 'c4:fe:1d:e4:02:03',
    mesh_mcast_rate = 12000,
    -- mesh_vlan = 14,
    -- client_disabled = true,
    -- mesh_disabled = false,
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.198.0.1',
    ip6 = 'fdc6:c4fe:1de4::1',

    -- anycast MAC of all nodes
    mac = '02:00:0A:C6:00:01',
  },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
  fastd_mesh_vpn = {
    -- List of crypto-methods to use.
    methods = {'salsa2012+umac'},
    enabled = true,
    -- configurable = true,

    mtu = 1406,
    groups = {
      backbone = {
        -- Limit number of connected peers to reduce bandwidth.
        limit = 1,

        -- List of peers.
        peers = {
          gw01 = {
            key = '92d472795ccedfc578db63c920bddacb8a5dc2f9d3dff17703ddbc7b980478a7',
            -- This is a list, so you might add multiple entries.
            remotes = {
                '"gw01.westpfalz.freifunk.net" port 10000',
            },
          },
          gw02 = {
            key = '444c83f025e98971a02502acc681fd8139c13ad5bf404eb0a88861f2509a3404',
            remotes = {
                '"gw02.westpfalz.freifunk.net" port 10000',
            },
          },
          gw03 = {
            key = '23650e3c34c2f7d27f8d4208a8800161b5ebb64e523bce99fbf9476217297299',
            remotes = {
                '"gw03.westpfalz.freifunk.net" port 10000',
            },
          },
          gw04 = {
            key = 'c6a0f97f831a94b05a104b98274c1e8c44046e2b0be5d7d7b152a0f195d2ca8c',
            remotes = {
                '"gw04.westpfalz.freifunk.net" port 10001',
            },
          },
          gw05 = {
            key = '919629d4f368864cc03fdc4dee51f4c9039b5e5b5c6f2885335f5223a6c3280b',
            remotes = {
                '"gw05.westpfalz.freifunk.net" port 10001',
            },
          },
          gw06 = {
            key = '543080e5573518ce2162ee0e88ef641af7e714c497a390b26d7975ef23531b77',
            remotes = {
                '"gw06.westpfalz.freifunk.net" port 10001',
            },
          },
          gw07 = {
            key = 'f2185edcfdf1e8e2d7731bc667fd13afcb05c685db162b6935f9e3a71b4fe858',
            remotes = {
                '"gw07.westpfalz.freifunk.net" port 10002',
            },
          },
          gw08 = {
            key = 'e0c89669d67178cf04918a73f5630bec7c94d688487e1cb67f7bedf1ba6d113a',
            remotes = {
                '"gw08.westpfalz.freifunk.net" port 10002',
            },
          },
          gw09 = {
            key = 'db507781477202a35fd0adab83f6fc8850f80934f750cd4514bb535f00c8f0db',
            remotes = {
                '"gw09.westpfalz.freifunk.net" port 10002',
            },
          },
        },

        -- Optional: nested peer groups
        -- groups = {
        --   backbone_sub = {
        --     ...
        --   },
        --   ...
        -- },
      },
      -- Optional: additional peer groups, possibly with other limits
      -- backbone2 = {
      --   ...
      -- },
    },
  },

  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
            'http://[fdc6:c4fe:1de4::c1]/stable/sysupgrade',
            'http://updates.westpfalz.freifunk.net/stable/sysupgrade'
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 2,

        -- List of public keys of maintainers.
        pubkeys = {
                '59f26a523d807c45fdaa030787512cf08a71575b57dc53dbdd964175fd3cb388', -- little.ben
                '8eef3fd1a0c1eeb8e594dac45e19cd2715afb278be2bea1187b34fe2c65c4f0b', -- paalsteek
                '67d68f269ed70ba45f0f162ccc4caa181074651b5e8bfb38146c49e0c7249606', -- Zaunei
        },
      },

      beta = {
        name = 'beta',
        mirrors = {
            'http://[fdc6:c4fe:1de4::c1]/beta/sysupgrade',
            'http://updates.westpfalz.freifunk.net/beta/sysupgrade'
        },
        good_signatures = 1,
        pubkeys = {
                '59f26a523d807c45fdaa030787512cf08a71575b57dc53dbdd964175fd3cb388', -- little.ben
                '8eef3fd1a0c1eeb8e594dac45e19cd2715afb278be2bea1187b34fe2c65c4f0b', -- paalsteek
                '67d68f269ed70ba45f0f162ccc4caa181074651b5e8bfb38146c49e0c7249606', -- Zaunei
        },
      },

      nightly = {
        name = 'nightly',
        mirrors = {
            'http://[fdc6:c4fe:1de4::c1]/.nightly/sysupgrade',
            'http://updates.westpfalz.freifunk.net/.nightly/sysupgrade'
        },
        good_signatures = 1,
        pubkeys = {
                '47f2ebfbb7e16a46fccf8514815e0fcd76868e4db6088e4bd65dca972fd93af1', -- ffwp autobuilder
                '59f26a523d807c45fdaa030787512cf08a71575b57dc53dbdd964175fd3cb388', -- little.ben
                '8eef3fd1a0c1eeb8e594dac45e19cd2715afb278be2bea1187b34fe2c65c4f0b', -- paalsteek
                '67d68f269ed70ba45f0f162ccc4caa181074651b5e8bfb38146c49e0c7249606', -- Zaunei
        },
      },

    },
  },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

  -- Bandwidth limiting
  simple_tc = {
    mesh_vpn = {
      ifname = 'mesh-vpn',

      -- You may enable it by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      limit_egress = 400,

      -- Default download limit (kbit/s).
      limit_ingress = 6000,
    },
  },

  -- Skip setup mode (config mode) on first boot
  -- setup_mode = {
  --  skip = true,
  -- },
}
